#   Generate debian recipes for project
#
#   This is a code generator built using the iMatix GSL code generation
#   language. See https://github.com/zeromq/gsl for details.
#
#   Copyright (c) the Contributors as noted in the AUTHORS file.
#   This file is part of zproject.
#
#   This Source Code Form is subject to the terms of the Mozilla Public
#   License, v. 2.0. If a copy of the MPL was not distributed with this
#   file, You can obtain one at http://mozilla.org/MPL/2.0/.

register_target ("debian", "packaging for Debian")

.macro target_debian
.for project.main where ( defined(main.service) & main.service > 0 )
.   systemd = 1
.endfor
.for project.target where ( target.name = "*" | target.name = "python_cffi" > 0 ) & project.exports_classes
.   python_cffi = 1
.endfor
.directory.create ('packaging/debian')
.output "packaging/debian/changelog"
$(project.name:lower) ($(->version.major).$(->version.minor).$(->version.patch)) UNRELEASED; urgency=low

  * Initial packaging.

 -- $(project.name) Developers <$(project.email)>  Wed, 31 Dec 2014 00:00:00 +0000
.output "packaging/debian/compat"
10
.output "packaging/debian/control"
#
#    $(project.name) - $(project.description?'':)
#
.   for project.license
#    $(string.trim (license.):block                                         )
.   endfor

Source:         $(string.replace (project.name, "_|-"):lower)
Section:        net
Priority:       optional
Maintainer:     $(project.name) Developers <$(project.email)>
Standards-Version: 4.0.1.0
Build-Depends: debhelper (>= 9),
    pkg-config,
.for project.use
.if defined(use.debian_name)
.   if !(use.debian_name = '')
    $(use.debian_name),
.   else
.       echo "WARNING: debian_name=='' for $(use.project) - not added to packaging/debian/control"
.   endif
.elsif regexp.match("^lib", use.libname)
    $(string.replace (use.libname, "_|-"))-dev,
.else
    lib$(string.replace (use.libname, "_|-"))-dev,
.endif
.endfor
.if systemd ?= 1
.# necessary for systemd.pc to get unit install path
    systemd,
    dh-systemd,
.endif
.if python_cffi ?= 1
.- NOTE: after support for Debian 7 and Ubuntu 12.04 is dropped, <!nopython> can be added to each of the following
    dh-python,
    python-all-dev, python-cffi, python-setuptools,
    python3-all-dev, python3-cffi, python3-setuptools,
.endif
.- NOTE: after support for Debian 7 and Ubuntu 12.04 is dropped, <!nodoc> can be added to each of the following
    asciidoc-base | asciidoc, xmlto,
    dh-autoreconf
.if project.exports_classes | ( project.has_classes & project.has_main )
.# NOTE: Now for at least some compilers the symbol visibility seems to
.# be managed in the shared library files, not the "exportedness" - so
.# the delivered compiled binary files can use and do require those libs
.# packaged even if all classes are marked private - should have at least
.# one though. Also note that "bin" files are not necessarily compiled,
.# e.g. helper scripts, so are not covered in this clause.

.if defined (project->abi)
Package: $(string.replace (project.libname, "_|-"))$(project->abi.current - project->abi.age)
.else
Package: $(string.replace (project.libname, "_|-"))0
.endif
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: $(project.name) shared library
 This package contains shared library for $(project.name):
 $(project.description)
.endif
.if project.exports_classes
.# NOTE: The development libs/headers make sense if any class was not
.# marked private - different from just the lib package above.

Package: $(string.replace (project.libname, "_|-"))-dev
Architecture: any
Section: libdevel
Depends:
    ${misc:Depends},
.for project.use
.if defined(use.debian_name)
.   if !(use.debian_name = '')
    $(use.debian_name),
.   else
.       echo "WARNING: debian_name=='' for $(use.project) - not added to packaging/debian/control"
.   endif
.elsif regexp.match("^lib", use.libname)
    $(string.replace (use.libname, "_|-"))-dev,
.else
    lib$(string.replace (use.libname, "_|-"))-dev,
.endif
.endfor
.if defined (project->abi)
    $(string.replace (project.libname, "_|-"))$(project->abi.current - project->abi.age) (= ${binary:Version})
.else
    $(string.replace (project.libname, "_|-"))0 (= ${binary:Version})
.endif
Description: $(project.name) development tools
 This package contains development files for $(project.name):
 $(project.description)
.endif
.if project.has_main | project.has_bin

Package: $(string.replace (project.name, "_|-"):lower)
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends},
.for project.use where use.type ?= "runtime"
.if defined(use.debian_name)
.   if !(use.debian_name = '')
    $(use.debian_name),
.   else
.       echo "WARNING: debian_name=='' for $(use.project) - not added to packaging/debian/control"
.   endif
.elsif regexp.match("^lib", use.libname)
    $(string.replace (use.libname, "_|-")),
.else
    $(string.replace (use.project, "_|-")),
.endif
.endfor
Description: runnable binaries from $(project.name)
 Main package for $(project.name):
 $(project.description)
.endif

Package: $(string.replace (project.name, "_|-"):lower)-dbg
Architecture: any
Section: debug
Priority: optional
Depends:
.if project.has_main | project.has_bin
    $(string.replace (project.name, "_|-"):lower) (= ${binary:Version}),
.elsif project.exports_classes
.if defined (project->abi)
    $(string.replace (project.libname, "_|-"))$(project->abi.current - project->abi.age) (= ${binary:Version}),
.else
    $(string.replace (project.libname, "_|-"))0 (= ${binary:Version}),
.endif
.endif
    ${misc:Depends}
Description: $(project.name) debugging symbols
 This package contains the debugging symbols for $(project.name):
 $(project.description).
.if python_cffi ?= 1

Package: python-$(string.replace (project.name, "_|-"):lower)-cffi
Architecture: any
.- NOTE: after support for Debian 7 and Ubuntu 12.04 is dropped, Build-Profiles: <!nopython> can be added
Section: python
Depends:
.if defined (project->abi)
    $(string.replace (project.libname, "_|-"))$(project->abi.current - project->abi.age) (= ${binary:Version}),
.else
    $(string.replace (project.libname, "_|-"))0 (= ${binary:Version}),
.endif
    ${misc:Depends}, ${shlibs:Depends},
    ${python:Depends}, python-cffi,
Description: Python CFFI bindings for $(project.name)
 This package contains Python CFFI bindings for $(project.name).

Package: python3-$(string.replace (project.name, "_|-"):lower)-cffi
Architecture: any
Section: python
Depends:
.if defined (project->abi)
    $(string.replace (project.libname, "_|-"))$(project->abi.current - project->abi.age) (= ${binary:Version}),
.else
    $(string.replace (project.libname, "_|-"))0 (= ${binary:Version}),
.endif
    ${misc:Depends}, ${shlibs:Depends},
    ${python3:Depends}, python3-cffi,
Description: Python 3 CFFI bindings for $(project.name)
 This package contains Python 3 CFFI bindings for $(project.name).
.endif
.output "packaging/debian/copyright"
Format: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
Upstream-Name: $(project.name)

Files: *
.if defined (project->starting_year)
Copyright: $(project->starting_year)- $(project.name) Developers <$(project.email)>
.else
Copyright: 2015- $(project.name) Developers <$(project.email)>
.endif
License: $(project.name)_license
.   for project.license
 $(string.replace(string.trim (license.), '\n\n|\n.\n'):block)
.   endfor
.output "packaging/debian/format"
3.0 (quilt)
.output "packaging/debian/rules"
#!/usr/bin/make -f
# -*- makefile -*-

DRAFTS=no
DOCS=yes

# OBS build: add
#   Macros:
#   %_with_drafts 1
# at the BOTTOM of the OBS prjconf
OBS_BUILD_CFG=/.build/build.dist
ifeq ("\$(wildcard \$(OBS_BUILD_CFG))","")
BUILDCONFIG=\$(shell ls -1 /usr/src/packages/SOURCES/_buildconfig* | head -n 1)
endif
ifneq ("\$(wildcard \$(OBS_BUILD_CFG))","")
ifneq ("\$(shell grep drafts \$(OBS_BUILD_CFG))","")
DRAFTS=yes
endif
.if python_cffi ?= 1
ifneq ("\$(shell grep python_cffi \$(OBS_BUILD_CFG))","")
PYTHON_CFFI=yes
endif
.endif
endif

# User build: DEB_BUILD_OPTIONS=drafts dpkg-buildpackage
ifneq (,\$(findstring drafts,\$(DEB_BUILD_OPTIONS)))
DRAFTS=yes
endif

ifneq (,\$(findstring nodoc,\$(DEB_BUILD_OPTIONS)))
DOCS=no
endif
ifneq (,\$(findstring nodoc,\$(DEB_BUILD_PROFILES)))
DOCS=no
endif
.if python_cffi ?= 1

# User build: DEB_BUILD_OPTIONS=python_cffi dpkg-buildpackage
ifneq (,\$(findstring python_cffi,\$(DEB_BUILD_OPTIONS)))
ifeq (,\$(findstring nopython,\$(DEB_BUILD_OPTIONS)))
ifeq (,\$(findstring nopython,\$(DEB_BUILD_PROFILES)))
PYTHON_CFFI=yes
WITH_PYTHON = --with=python2,python3
endif
endif
endif

ifeq (yes,\$(PYTHON_CFFI))
export PYBUILD_NAME=$(project.name)-cffi
export PKG_CONFIG_PATH=\$(CURDIR)/bindings/python_cffi:$PKG_CONFIG_PATH

override_dh_auto_build:
	dh_auto_build
	# Problem: we need pkg-config points to built and not yet installed copy of $(project.name)
	# Solution: chicken-egg problem - let's make "fake" pkg-config file
	sed -e "s@^libdir.*@libdir=\$(CURDIR)/src/.libs@" \
		-e "s@^includedir.*@includedir=\$(CURDIR)/include@" \
		src/$(string.replace (project.libname, "_|-")).pc > bindings/python_cffi/$(string.replace (project.libname, "_|-")).pc
	dh_auto_build --sourcedirectory=bindings/python_cffi -O--buildsystem=pybuild

override_dh_auto_install:
	dh_auto_install
	dh_auto_install --sourcedirectory=bindings/python_cffi -O--buildsystem=pybuild

override_dh_auto_clean:
	dh_auto_clean
	dh_auto_clean -O--buildsystem=pybuild
	rm -f bindings/python_cffi/*.pc
	rm -rf bindings/python_cffi/*.egg-info/
else
WITH_PYTHON =
# This tells debhelper to avoid building the python CFFI packages
DH_OPTIONS += -Npython-$(string.replace (project.name, "_|-"):lower)-cffi
DH_OPTIONS += -Npython3-$(string.replace (project.name, "_|-"):lower)-cffi
export DH_OPTIONS
endif
.endif

# Workaround for automake < 1.14 bug
\$(shell dpkg --compare-versions `dpkg-query -W -f='\$${Version}\\n' automake` lt 1:1.14 && mkdir -p config)
\$(shell test -f src/Makemodule-local.am || touch src/Makemodule-local.am)

override_dh_strip:
	dh_strip --dbg-package=$(string.replace (project.name, "_|-"):lower)-dbg

override_dh_auto_test:
	echo "Skipped for now"

override_dh_auto_configure:
	dh_auto_configure -- \\
.if systemd ?= 1
		--with-systemd-units \\
.endif
.for project.use where use.optional
		--with-$(use.libname)=yes \\
.endfor
		--with-docs=\$(DOCS) \\
		--enable-drafts=\$(DRAFTS)

%:
	dh $@ \\
.if systemd ?= 1
		--with systemd \\
.endif
.if python_cffi ?= 1
		\$(WITH_PYTHON) \\
.endif
		--parallel \\
		--with autoreconf
.chmod_x ("packaging/debian/rules")
.discover_manpages(project)
.if project.has_main | project.has_bin
.   output ("packaging/debian/$(string.replace (project.name, "_|-"):lower).manpages")
.   for project.main where scope = "public" & project.has_main & man1 ?<> ""
debian/tmp/usr/share/man/man1/$(main.name).1
.   endfor
.   output ("packaging/debian/$(string.replace (project.name, "_|-"):lower).install")
.# generate binary names
.   for project.main where scope = "public"
.       if project.has_main
usr/bin/$(main.name)
.       endif
.   endfor
.   for project.bin
usr/bin/$(bin.name)
.   endfor
.# generate service file names
.   for project.main where ( defined(main.service) & main.service > 0 )
.       if !defined(main.no_config) | main.no_config ?= 0
etc/$(project.name)/$(main.name).cfg
.       endif
.       if file.exists("src/$(main.name).service") | file.exists("src/$(main.name).service.in") | ( main.service ?= 1 | main.service ?= 3 )
lib/systemd/system/$(main.name).service
.       endif
.       if file.exists("src/$(main.name)@.service") | file.exists("src/$(main.name)@.service.in") | ( main.service ?= 2 | main.service ?= 3 )
lib/systemd/system/$(main.name)@.service
.       endif
.   endfor
.   for project.main where ( defined(main.timer) & main.timer > 0 )
.       if file.exists("src/$(main.name).timer") | file.exists("src/$(main.name).timer.in") | ( main.timer ?= 1 | main.timer ?= 3 )
/usr/lib/systemd/system/$(main.name).timer
.       endif
.       if file.exists("src/$(main.name)@.timer") | file.exists("src/$(main.name)@.timer.in") | ( main.timer ?= 2 | main.timer ?= 3 )
/usr/lib/systemd/system/$(main.name)@.timer
.       endif
.   endfor
.   for project.bin where ( defined(bin.service) & bin.service > 0 )
.       if file.exists("src/$(bin.name).service") | file.exists("src/$(bin.name).service.in") | ( bin.service ?= 1 | bin.service ?= 3 )
lib/systemd/system/$(bin.name).service
.       endif
.       if file.exists("src/$(bin.name)@.service") | file.exists("src/$(bin.name)@.service.in") | ( bin.service ?= 2 | bin.service ?= 3 )
lib/systemd/system/$(bin.name)@.service
.       endif
.   endfor
.   for project.bin where ( defined(bin.timer) & bin.timer > 0 )
.       if file.exists("src/$(bin.name).timer") | file.exists("src/$(bin.name).timer.in") | ( bin.timer ?= 1 | bin.timer ?= 3 )
lib/systemd/system/$(bin.name).timer
.       endif
.       if file.exists("src/$(bin.name)@.timer") | file.exists("src/$(bin.name)@.timer.in") | ( bin.timer ?= 2 | bin.timer ?= 3 )
lib/systemd/system/$(bin.name)@.timer
.       endif
.   endfor
.insert_snippet ("debian.install")
.endif

.if project.exports_classes
.if defined (project->abi)
.   output ("packaging/debian/$(string.replace (project.libname, "_|-"))$(project->abi.current - project->abi.age).install")
.else
.   output ("packaging/debian/$(string.replace (project.libname, "_|-"))0.install")
.endif
usr/lib/*/$(project.libname).so.*
.   output ("packaging/debian/$(string.replace (project.libname, "_|-"))-dev.install")
usr/include/*
usr/lib/*/$(project.libname).so
usr/lib/*/pkgconfig/$(project.libname).pc
.   if count (class, defined (class.api))
usr/share/zproject
.   endif
.   output ("packaging/debian/$(string.replace (project.libname, "_|-"))-dev.manpages")
.   if man3 ?<> ""
debian/tmp/usr/share/man/man3/*
.   endif
.   if man7 ?<> ""
debian/tmp/usr/share/man/man7/*
.   endif
.endif
.output ("packaging/debian/$(string.replace (project.name, "_|-"):lower).dsc.obs")
Format: 3.0 (quilt)
Binary: $(project.name)
Source: $(project.name)
Version: $(->version.major).$(->version.minor).$(->version.patch)
Maintainer: $(project.name) Developers <$(project.email)>
Architecture: any
Build-Depends: debhelper (>= 9),
    pkg-config,
.for project.use
.if defined(use.debian_name)
.   if !(use.debian_name = '')
    $(use.debian_name),
.   else
.       echo "WARNING: debian_name=='' for $(use.project) - not added to packaging/debian/control"
.   endif
.elsif regexp.match("^lib", use.libname)
    $(string.replace (use.libname, "_|-"))-dev,
.else
    lib$(string.replace (use.libname, "_|-"))-dev,
.endif
.endfor
.if systemd ?= 1
    systemd,
    dh-systemd,
.endif
.if python_cffi ?= 1
    dh-python,
    python-all-dev, python-cffi, python-setuptools,
    python3-all-dev, python3-cffi, python3-setuptools,
.endif
    asciidoc-base | asciidoc, xmlto,
    dh-autoreconf

Files:
 7697688bf65a35bc33ae2db51ebb0e3b 818110 $(string.replace (project.name, "_|-"):lower).tar.gz
.endmacro
