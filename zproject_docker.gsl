#   Generate docker packaging for project
#
#   This is a code generator built using the iMatix GSL code generation
#   language. See https://github.com/zeromq/gsl for details.
#
#   Copyright (c) the Contributors as noted in the AUTHORS file.
#   This file is part of zproject.
#
#   This Source Code Form is subject to the terms of the Mozilla Public
#   License, v. 2.0. If a copy of the MPL was not distributed with this
#   file, You can obtain one at http://mozilla.org/MPL/2.0/.

register_target ("docker", "packaging for Docker")

.macro generate_docker_file ()
.output "Dockerfile"
FROM ubuntu:trusty
MAINTAINER $(project.name) Developers <$(project.email)>

RUN DEBIAN_FRONTEND=noninteractive apt-get update -y -q
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y -q --force-yes build-essential git-core libtool autotools-dev autoconf automake pkg-config unzip libkrb5-dev cmake

RUN useradd -d /home/zmq -m -s /bin/bash zmq
RUN echo "zmq ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/zmq
RUN chmod 0440 /etc/sudoers.d/zmq

USER zmq

.for use where !optional & defined (use.tarball)
WORKDIR /home/zmq/tmp-deps
RUN wget $(use.tarball)
RUN tar -xzf \$(basename "$(use.tarball)")
RUN rm \$(basename "$(use.tarball)")
WORKDIR /home/zmq/tmp-deps/\$(basename "$(use.tarball)" .tar.gz)
RUN ./configure --quiet --without-docs
RUN make
RUN sudo make install
RUN sudo ldconfig

.endfor
.for use where !optional & !defined (use.tarball)
WORKDIR /home/zmq/tmp-deps
RUN git clone --quiet $(use.repository) $(use.project)
WORKDIR /home/zmq/tmp-deps/$(use.project)
RUN ./autogen.sh 2> /dev/null
RUN ./configure --quiet --without-docs
RUN make
RUN sudo make install
RUN sudo ldconfig

.endfor
WORKDIR /home/zmq
RUN git clone --quiet git://github.com/zeromq/$(project.name:c).git $(project.name:c)
WORKDIR /home/zmq/$(project.name:c)
RUN ./autogen.sh 2> /dev/null
RUN ./configure --quiet --without-docs
RUN make
RUN sudo make install
RUN sudo ldconfig
.if file.exists ("Dockerfile.in")

$(file.slurp ("Dockerfile.in"))
.endif
.endmacro

function target_docker
    if defined (project.repository)
        generate_docker_file ()
    endif
endfunction
